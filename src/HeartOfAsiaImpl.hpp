/* Autogenerated with kurento-module-creator */

#ifndef __HEART_OF_ASIA_IMPL_HPP__
#define __HEART_OF_ASIA_IMPL_HPP__

#include "OpenCVFilterImpl.hpp"
#include "HeartOfAsia.hpp"
#include <EventHandler.hpp>
#include <boost/property_tree/ptree.hpp>
#include "HeartOfAsiaOpenCVImpl.hpp"

namespace kurento
{
namespace module
{
namespace heartofasia
{
class HeartOfAsiaImpl;
} /* heartofasia */
} /* module */
} /* kurento */

namespace kurento
{
void Serialize (std::shared_ptr<kurento::module::heartofasia::HeartOfAsiaImpl> &object, JsonSerializer &serializer);
} /* kurento */

namespace kurento
{
class MediaPipelineImpl;
} /* kurento */

namespace kurento
{
namespace module
{
namespace heartofasia
{

class HeartOfAsiaImpl : public OpenCVFilterImpl, public virtual HeartOfAsia, public virtual HeartOfAsiaOpenCVImpl
{

public:

  HeartOfAsiaImpl (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline);

  virtual ~HeartOfAsiaImpl () {};

  /* Next methods are automatically implemented by code generator */
  virtual bool connect (const std::string &eventType, std::shared_ptr<EventHandler> handler);
  virtual void invoke (std::shared_ptr<MediaObjectImpl> obj,
                       const std::string &methodName, const Json::Value &params,
                       Json::Value &response);

  virtual void Serialize (JsonSerializer &serializer);

private:

  class StaticConstructor
  {
  public:
    StaticConstructor();
  };

  static StaticConstructor staticConstructor;

};

} /* heartofasia */
} /* module */
} /* kurento */

#endif /*  __HEART_OF_ASIA_IMPL_HPP__ */
